<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ohgiraffers.section01.xml.DynamicSqlMapper">


    <resultMap id="menuResultMap" type="com.ohgiraffers.section01.xml.MenuDTO">
        <id property="code" column="MENU_CODE"/>
        <result property="name" column="MENU_NAME"/>
        <result property="price" column="MENU_PRICE"/>
        <result property="categoryCode" column="CATEGORY_CODE"/>
        <result property="orderableStatus" column="ORDERABLE_STATUS"/>
    </resultMap>
    <!--<if>태그는 테스트 속성의 조건에 해당될때만 엘리먼트 구문을 쿼리에 포함한다

    OGNL(Object Graph Navigation Language)
    : ' ' 구간의 값은 리터럴 값으로 보고 그게 아닌 이름은 객체필드 또는 변수로 인식하게 작성하는 기법-->
    <select id="selectMenuByPrice" parameterType="hashmap" resultMap="menuResultMap">
        SELECT A.MENU_CODE
        ,A.MENU_NAME
        ,A.MENU_PRICE
        ,A.CATEGORY_CODE
        ,A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS='Y'
        <if test="price gte 0 and price lte 10000">
            <!-- gte= >=   lte= <=-->
            <![CDATA[AND A.MENU_PRICE <#{ price }]]>
        </if>
        <if test="price gt 10000 and price lt 20000">
            AND A.MENU_PRICE BETWEEN 10000 AND #{ price }
        </if>
        <if test="price gt 20000 and price lte 30000">
            AND A.MENU_PRICE BETWEEN 20000 AND #{ price }
        </if>
        <if test="price gt 30000">
            AND A.MENU_PRICE BETWEEN 30000 and #{ price }
        </if>
        ORDER BY A.MENU_CODE
    </select>

    <select id="searchMenu" parameterType="com.ohgiraffers.section01.xml.SearchCriteria" resultMap="menuResultMap">
        SELECT A.MENU_CODE
        ,A.MENU_NAME
        ,A.MENU_PRICE
        ,A.CATEGORY_CODE
        ,A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition == 'category'">
            JOIN TBL_CATEGORY B ON (A.CATEGORY_CODE=B.CATEGORY_CODE)
        </if>
        WHERE A.ORDERABLE_STATUS='Y'
        <if test="condition == 'name'">
            AND A.MENU_NAME LIKE CONCAT('%',#{ value},'%')
        </if>
        <if test=" condition == 'category'">
            AND B.CATEGORY_NAME=#{ value }
        </if>
        ORDER BY A.MENU_CODE
    </select>
    <select id="searchMenuBySupCategory" parameterType="SearchCriteria" resultMap="menuResultMap">
        SELECT A.MENU_CODE
        ,A.MENU_NAME
        ,A.MENU_PRICE
        ,A.CATEGORY_CODE
        ,A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.ORDERABLE_STATUS='Y'
        <choose>
            <when test="value == '식사'">
                AND A.CATEGORY_CODE IN(4,5,6,7)
            </when>
            <when test="value == '음료'">
                AND A.CATEGORY_CODE IN(8,9,10)
            </when>
            <otherwise>
                AND A.CATEGORY_CODE IN(11,12)
            </otherwise>
        </choose>
        ORDER BY A.MENU_CODE
    </select>
    <!-- <when>태그는 테스트 속성 조건에 부합하면 when 엘리먼트 구문을 쿼리에 포함한다
    어떤한 when 조건도 만족하지 못하면 otherwise 엘리먼트 구문을 쿼리에 포함한다-->


    <!--<foreach> 자바의 for문 같은 역할
    collection 속성 반복을 수행할 대상
    item 반복을 수행할 때마다 꺼내올 값의 이름 설정
    open <foreach> 엘리먼트 구눔의 가장 앞에 올 문자
    separator 반복이 수행될때 꺼내온 item 사이에 들어갈 문자
    close 엘리먼트구문에 마지막에 갈 문자-->

    <select id="selectMenuByRandumMenuCode" parameterType="hashmap" resultMap="menuResultMap">
        SELECT A.MENU_CODE
        ,A.MENU_NAME
        ,A.MENU_PRICE
        ,A.CATEGORY_CODE
        ,A.ORDERABLE_STATUS
        FROM TBL_MENU A
        WHERE A.MENU_CODE IN
        <foreach collection="randomMenuCodeList" item="menuCode" open="(" separator="," close=")">
            #{ menuCode }
        </foreach>
    </select>
    <!--
    <where>:엘리먼트 구문이 where로 시작하지않으면 자동으로 붙혀준다
    또한 where엘리먼트 내부에 모두 쿼리문이 추가되지않는 상황일경우 where을 무시한다
    엘리먼트 구분이 and 나 or로 시작하면 자동으로 해당단어를 지운다-->
    <!--<trim>:조회조건에 and혹은 or로 시작하지않는 다른문자로 시작하는 경우 등
    where 엘리먼트가 기본적으로처리하는 기능에 추가 규칙을 정의하기위해 trim 엘리먼트를 제공한다
    1.prefix: 처리후 엘리먼트에 내용이있으면 가장앞에 붙히는 기술
    2.prefixOverride: 처리후 엘리먼트 내용중 가장앞의 속성값의 문자를 삭제
    3.surfix: 처리후 엘리먼트의 내용이있으면 가장뒤에 붙힘
    4.suffixOverride: 처리후 엘리먼트내용중 가장뒤의 속성값의 문자를 삭제-->
    <select id="searchMenuByCodeOrSearchAll" parameterType="SearchCriteria" resultMap="menuResultMap">
        SELECT A.MENU_CODE
        ,A.MENU_NAME
        ,A.MENU_PRICE
        ,A.CATEGORY_CODE
        ,A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <if test="condition != null and condition eq 'menuCode'">
            <where>
                A.MENU_CODE=#{ value }
            </where>
        </if>
    </select>
    <select id="searchMenuByNameOrCategory" parameterType="hashMap" resultMap="menuResultMap">
        SELECT A.MENU_CODE
        ,A.MENU_NAME
        ,A.MENU_PRICE
        ,A.CATEGORY_CODE
        ,A.ORDERABLE_STATUS
        FROM TBL_MENU A
        <!--문제 상황발생:카테고리만으로 조회하는 경우 where가 붙지않아 쿼리 조회불가

        <if test="nameValue != null">
            WHERE A.MENU_NAME LIKE CONCAT ('%',#{ nameValue },'%')
        </if>
        <if test="categoreValue != null">
            AND A.CATEGORY_CODE LIKE CONCAT ('%',#{ categoryValue },'%')

        </if>-->

        <!--해결방법1 <where>-->
        <!--<where>
            <if test="nameValue != null">
                WHERE A.MENU_NAME LIKE CONCAT ('%',#{ nameValue },'%')
            </if>
            <if test="categoreValue != null">
            AND A.CATEGORY_CODE LIKE CONCAT ('%',#{ categoryValue },'%')
            </if>
        </where>-->
        <trim prefix="WHERE" suffixOverrides="AND | OR">
        <if test="nameValue != null">
            A.MENU_NAME LIKE CONCAT ('%',#{ nameValue },'%')
        </if>
        <if test="categoreValue != null">
        AND A.CATEGORY_CODE LIKE CONCAT ('%',#{ categoryValue },'%')
        </if>
        </trim>
    </select>
    <!--문제상황발생:메뉴명 값을 입력하지않은경우 set 이 붙지않아 쿼리오류발생-->
    <update id="modifyMenu" parameterType="hashmap">
        UPDATE
        TBL_MENU
<!--        <set>-->
<!--        <if test="name != null and name != ''">-->
<!--             MENU_NAME=#{ name }-->
<!--        </if>-->
<!--        <if test="categoryCode != null and categoryCode gt 0">-->
<!--            ,CATEGORY_CODE= #{ categoryCode }-->
<!--        </if>-->
<!--        <if test="orderableStatus != null and orderableStatus != ''">-->
<!--            ,ORDERBLE_STATUS=#{ orderalbeStatus }-->
<!--        </if>-->
<!--        WHERE MENU_CODE =#{ code }-->
<!--        </set>-->
        <!--방법2 <trim> 이용-->
        <trim prefix="set" prefixOverrides=",">
            <if test="name != null and name != ''">
                MENU_NAME=#{ name }
            </if>
            <if test="categoryCode != null and categoryCode > 0">
                ,CATEGORY_CODE= #{ categoryCode }
            </if>
            <if test="orderableStatus != null and orderableStatus != ''">
                ,ORDERBLE_STATUS=#{ orderalbeStatus }
            </if>
            WHERE MENU_CODE =#{ code }
        </trim>
    </update>
</mapper>